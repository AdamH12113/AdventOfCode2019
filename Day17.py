import copy
import math
import time
import os
from Intcode import CPU

with open('Input17.txt') as f:
	program = next(f).strip()

input = []
output = []
cpu = CPU(program, input, output)

cpu.execute()
out_text = "".join([chr(c) for c in output])
#print(out_text)
map = out_text.split('\n')

align_param_sum = 0

for l in range(1, len(map)-1):
	for c in range(1, len(map[l])-1):
		if map[l][c] == "#" and map[l][c-1] == "#" and map[l][c+1] == "#" and \
		   map[l-1][c] == "#" and map[l+1][c] == "#":
			align_param_sum += c * l

print("Part 1: ", align_param_sum)


# A           B              C
# R8 R10 R10  R4 R8 R10 R12
# R8 R10 R10                 R12 R4 L12 L12
# R8 R10 R10  R4 R8 R10 R12  R12 R4 L12 L12
# R8 R10 R10  R4 R8 R10 R12  R12 R4 L12 L12

#                   | <-- 20 characters
input_text = \
"A,B,A,C,A,B,C,A,B,C\n" \
"R,8,R,10,R,10\n" \
"R,4,R,8,R,10,R,12\n" \
"R,12,R,4,L,12,L,12\n" \
"y\n"

output = []
input = [ord(c) for c in input_text]
cpu = CPU(program, input, output)
cpu.prog[0] = 2
cpu.execute()
out_text = ("".join([chr(c) for c in output[:-1]])).split('\n\n')

for screen in out_text[:-1]:
	time.sleep(0.05)
	os.system("cls")
	print(screen)

print("\nDust collected: ", output[-1])
	

# ............................#########
# ....................................#
# ....................................#
# ....................................#
# ....................................#
# ....................................#
# ..........................#########.#
# ..........................#.......#.#
# ......................###########.#.#
# ......................#...#.....#.#.#
# ..#############.......#...###########
# ..#...........#.......#.........#.#..
# ..#...........#.......#.........#.#..
# ..#...........#.......#.........#.#..
# ..#.....#############.#.........#.#..
# ..#.....#.....#.....#.#.........#.#..
# ###########...#.....#.#############..
# #.#.....#.#...#.....#...........#....
# #.#.....#.#...#.....############v....
# #.#.....#.#...#......................
# #.#########...#...............#......
# #.......#.....#...............#......
# #.......#.#####...............#......
# #.......#.#...................#......
# #.......#.#...................#......
# #.......#.#...................#......
# #########.#...................#......
# ..........#...................#......
# ......#############...........#......
# ......#...#.......#...........#......
# ......#...#.......#...........#......
# ......#...#.......#...........#......
# ......#...#.#####.#############......
# ......#...#.#...#....................
# ......#...#############..............
# ......#.....#...#.....#..............
# ......#.....#...#.....#..............
# ......#.....#...#.....#..............
# ......#.....#...#.....#..............
# ......#.....#...#.....#..............
# ......###########.....#..............
# ............#.........#..............
# ............###########..............
